name: CI & CD (Docker Hub + Minikube)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push:
    name: Build, Test, and Push Image
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.image-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        run: |
          echo "image-tag=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build & Push
        run: |
          IMAGE="${{ secrets.DOCKER_USERNAME }}/ci-cd-app:${{ steps.meta.outputs.image-tag }}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "Pushed $IMAGE"

  deploy_minikube:
    name: Deploy to Minikube (Self-Hosted Runner)
    needs: [build_and_push]
    # Set up a self-hosted runner on your local VM that has kubectl + Minikube configured
    runs-on: self-hosted
    env:
      IMAGE_TAG: ${{ needs.build_and_push.outputs.image_tag }}
    steps:
      - name: Checkout (for manifests)
        uses: actions/checkout@v4

      - name: Use kubectl context
        run: |
          kubectl config current-context
          kubectl get nodes

      - name: Update image and apply manifests
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl set image deployment/ci-cd-app ci-cd-app=$DOCKER_USERNAME/ci-cd-app:$IMAGE_TAG
          kubectl rollout status deployment/ci-cd-app --timeout=120s

      - name: Show service URL (NodePort)
        run: |
          kubectl get svc ci-cd-service -o wide
          echo "If using Minikube: minikube service ci-cd-service --url"
